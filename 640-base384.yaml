# YOLO-ViL model configuration for 640x640 input, BASE DIM = 384, linear DropPath 0â†’0.2
ch: 3
nc: 80
imgsz: 640
scales:
  n: [1.00, 1.00, 1024]
  s: [1.00, 1.00, 1024]
  m: [1.00, 1.00, 512]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.50, 512]

# Backbone
backbone:
  # Stage 0: Initial Patch Embedding (8x8 patches -> 80x80 grid, 384 channels)
  - [-1, 1, VitPatchEmbedBlock, [3, 384, [640,640], [8,8]]]      # 0: [B, 6400, 384]
  - [-1, 1, VitPosEmbedBlock,  [384, 384, [80,80]]]              # 1: [B, 6400, 384]

  # Stage 1: ViL Blocks for 80x80 grid
  - [-1, 1, ViLBlockPairBlock, [384, 384, {seqlens: [80,80],  chunk_size: 512, conv_kind: '2d', qkv_Block_size: 64, drop_path: 0.000}]] # 2

  # Stage 2: 40x40 grid
  - [-1, 1, PatchMerger,        [384, 1600]]                     # 3: [B, 1600, 384]
  - [-1, 1, ViLBlockPairBlock, [384, 384, {seqlens: [40,40],  chunk_size: 512, conv_kind: '2d', qkv_Block_size: 64, drop_path: 0.022}]] # 4

  # Stage 3: 20x20 grid
  - [-1, 1, PatchMerger,        [384, 400]]                      # 5: [B, 400, 384]
  - [-1, 1, ViLBlockPairBlock, [384, 384, {seqlens: [20,20],  chunk_size: 256, conv_kind: '2d', qkv_Block_size: 64, drop_path: 0.044}]] # 6

  # Stage 4: 10x10 grid
  - [-1, 1, PatchMerger,        [384, 100]]                      # 7: [B, 100, 384]
  - [-1, 1, ViLBlockPairBlock, [384, 384, {seqlens: [10,10],  chunk_size: 64,  conv_kind: '2d', qkv_Block_size: 64, drop_path: 0.067}]] # 8

  # Convert sequence features from backbone to images for the FPN head
  - [2, 1, SequenceToImage, [[80,80]]]                           # 9:  P2_img [B, 384, 80, 80]
  - [4, 1, SequenceToImage, [[40,40]]]                           # 10: P3_img [B, 384, 40, 40]
  - [6, 1, SequenceToImage, [[20,20]]]                           # 11: P4_img [B, 384, 20, 20]
  - [8, 1, SequenceToImage, [[10,10]]]                           # 12: P5_img [B, 384, 10, 10]

# Head (FPN + Detection) using 4 levels (P2, P3, P4, P5), all 384 channels for detection
head:
  # Top-Down Path
  - [12, 1, nn.Upsample, [None, 2, "nearest"]]                   # 13: [B, 384, 20, 20]
  - [[13, 11], 1, Concat, [1]]                                   # 14: [B, 768, 20, 20]
  # ViL fusion @ 20x20
  - [-1, 1, ViLFusionBlock, [768, 384, {seqlens: [20,20], chunk_size: 256, conv_kind: '2d', mlp_ratio: 4.0, qkv_Block_size: 64, drop_path: 0.089}]] # 15

  # P3_td
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]                   # 16: [B, 384, 40, 40]
  - [[16, 10], 1, Concat, [1]]                                   # 17: [B, 768, 40, 40]
  # ViL fusion @ 40x40
  - [-1, 1, ViLFusionBlock, [768, 384, {seqlens: [40,40], chunk_size: 512, conv_kind: '2d', mlp_ratio: 4.0, qkv_Block_size: 64, drop_path: 0.111}]] # 18

  # P2_td
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]                   # 19: [B, 384, 80, 80]
  - [[19, 9], 1, Concat, [1]]                                    # 20: [B, 768, 80, 80]
  # ViL fusion @ 80x80
  - [-1, 1, ViLFusionBlock, [768, 384, {seqlens: [80,80], chunk_size: 512, conv_kind: '2d', mlp_ratio: 4.0, qkv_Block_size: 64, drop_path: 0.133}]] # 21

  # Bottom-Up Path
  - [21, 1, Conv, [384, 3, 2]]                                   # 22: [B, 384, 40, 40]
  - [[22, 18], 1, Concat, [1]]                                   # 23: [B, 768, 40, 40]
  # ViL fusion @ 40x40
  - [-1, 1, ViLFusionBlock, [768, 384, {seqlens: [40,40], chunk_size: 512, conv_kind: '2d', mlp_ratio: 4.0, qkv_Block_size: 64, drop_path: 0.156}]] # 24

  - [-1, 1, Conv, [384, 3, 2]]                                   # 25: [B, 384, 20, 20]
  - [[25, 15], 1, Concat, [1]]                                   # 26: [B, 768, 20, 20]
  # ViL fusion @ 20x20
  - [-1, 1, ViLFusionBlock, [768, 384, {seqlens: [20,20], chunk_size: 256, conv_kind: '2d', mlp_ratio: 4.0, qkv_Block_size: 64, drop_path: 0.178}]] # 27

  - [-1, 1, Conv, [384, 3, 2]]                                   # 28: [B, 384, 10, 10]
  - [[28, 12], 1, Concat, [1]]                                   # 29: [B, 768, 10, 10]
  # ViL fusion @ 10x10
  - [-1, 1, ViLFusionBlock, [768, 384, {seqlens: [10,10], chunk_size: 64,  conv_kind: '2d', mlp_ratio: 4.0, qkv_Block_size: 64, drop_path: 0.200}]] # 30

  # Detection Head
  - [[21, 24, 27, 30], 1, v10Detect, [nc]]                       # 31
